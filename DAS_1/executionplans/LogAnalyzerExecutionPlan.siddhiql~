/* Enter a unique ExecutionPlan */
@Plan:name('LogAnalyzerExecutionPlan')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('Analyse logs according to the exception type and alert via email')

/* define streams/tables and write queries here ... */

/*@Import('mappedStream:1.0.0')
define stream InputStream (logstream string, class string, eventTimeStamp string, level string, trace string);

@Export('NotificationStream:1.0.0')
define stream OutputStream (type string, InitialCount long, MidCount long, FinalCount long);

define stream filteredErrorStream (class string, eventTimeStamp string, trace string);
define stream groupedExceptionStream (class string, eventTimeStamp string, trace string, type string);

from InputStream[level=='ERROR']
select class,eventTimeStamp,trace
insert into filteredErrorStream;

from filteredErrorStream[trace != 'null' and str:contains(trace, 'java.net.SocketException')]
select class,eventTimeStamp, trace , 'Socket Exception' as type
insert into groupedExceptionStream;

from filteredErrorStream[trace != 'null' and str:contains(trace, 'java.io.FileNotFoundException')]
select class,eventTimeStamp, trace , 'File not found Exception' as type
insert into groupedExceptionStream;

from filteredErrorStream[trace != 'null' and str:contains(trace, 'javax.servlet.ServletException')]
select class,eventTimeStamp, trace , 'Class not found Exception' as type
insert into groupedExceptionStream;*/

@Import('groupedExceptionStream:1.0.0')
define stream groupedExceptionStream (class string, eventTimeStamp string, trace string, type string);

@Export('NotificationStream:1.0.0')
define stream OutputStream (type string, InitialCount long, MidCount long, FinalCount long);

partition with (type of groupedExceptionStream)
begin 
from groupedExceptionStream#window.timeBatch(10 sec)
select type,count() as numOfEvents
insert into #getCountByTypeStream;

from e1=#getCountByTypeStream,e2=#getCountByTypeStream[numOfEvents>e1.numOfEvents],e3=#getCountByTypeStream[numOfEvents>e2.numOfEvents]
select e1.type,e1.numOfEvents as InitialCount,e2.numOfEvents as MidCount,e3.numOfEvents as FinalCount
insert into OutputStream;
end;
